airconv_src = files([
  'dxbc_converter.cpp',
  'dxbc_utils.cpp',
])

# generated by llvm-config --libs bitwriter
llvm_deps = [
  '-lLLVMBitWriter' ,'-lLLVMAnalysis' ,'-lLLVMProfileData' ,'-lLLVMSymbolize' ,'-lLLVMDebugInfoBTF' ,
  '-lLLVMDebugInfoPDB' ,'-lLLVMDebugInfoMSF' ,'-lLLVMDebugInfoDWARF' ,'-lLLVMObject' ,'-lLLVMTextAPI' ,
  '-lLLVMMCParser' ,'-lLLVMIRReader' ,'-lLLVMAsmParser' ,'-lLLVMMC' ,'-lLLVMDebugInfoCodeView' ,'-lLLVMBitReader' ,
  '-lLLVMCore' ,'-lLLVMRemarks' ,'-lLLVMBitstreamReader' ,'-lLLVMBinaryFormat' ,'-lLLVMTargetParser' ,'-lLLVMSupport' ,
  '-lLLVMDemangle'
]

llvm_cxx_flags = [
  '-fno-exceptions','-funwind-tables','-fno-rtti','-D_FILE_OFFSET_BITS=64',
  '-D__STDC_CONSTANT_MACROS','-D__STDC_FORMAT_MACROS','-D__STDC_LIMIT_MACROS'
]

llvm_ld_flags = [
  '-L'+join_paths(meson.source_root(), 'toolchains/llvm/lib')
]

llvm_include_path = include_directories('../../toolchains/llvm/include') # FIXME: in favor of path relative to project

airconv_lib = static_library('airconv', airconv_src,
  include_directories : [ dxmt_include_path, llvm_include_path ],
  cpp_args       : llvm_cxx_flags,
  dependencies        : [ DXBCParser_dep ],
  link_args           : llvm_ld_flags
)

airconv_dep = declare_dependency(
  link_with           : [ airconv_lib ],
  include_directories : [ dxmt_include_path ],
  link_args           : [ llvm_ld_flags, llvm_deps ] # meh
)
